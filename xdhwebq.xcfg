<?xml version="1.0" encoding="UTF-8"?>
<Configurations xmlns:xpp="http://q37.info/ns/xpp/">
 <Configuration target="xdhwebq">
  <Definitions>
   <CustomItems>
    <AttributeNames>
     <Widget>data-xdh-widget</Widget>
     <Result>data-xdh-result</Result>
    </AttributeNames>
   </CustomItems>
   <Scripts>
    <Parent><![CDATA[
					getOrGenerateId( getElement( "%Id% ).parentElement );
				]]>    </Parent>
    <CreateElement><![CDATA[
					let id = "%Id%";
					let node = document.createElement( "%Name%" );
					if ( id !== "" )
						node.id = id;
					document.head.appendChild( node );	// 'node' had to be inserted in the DOM, or subsequent 'document.getElementById()' will not find it !
					getOrGenerateId( node );
				]]>    </CreateElement>
    <Child>
     <Insert><![CDATA[
					 let node = getElement( "%Id%" );
					 node.insertBefore( getElement( "%Child%" ), node.firstChild );
					]]>     </Insert>
     <Append><![CDATA[
					 getElement( "%Id%" ).appendChild( getElement( "%Child% ) );
					]]>     </Append>
     <First><![CDATA[
						getOrGenerateId( getElement( "%Id%" ).firstChild );
					]]>     </First>
     <Last><![CDATA[
						getOrGenerateId( getElement( "%Id%" ).lastChild );
					]]>     </Last>
    </Child>
    <Sibling>
     <Previous><![CDATA[
						getOrGenerateId( getElement( "%Id%" ).previousSibling );
					]]>     </Previous>
     <Next><![CDATA[
						getOrGenerateId( getElement( "%Id%" ).nextSibling );
					]]>     </Next>
    </Sibling>
    <Insert>
     <Before><![CDATA[
						let node = getElement( "%Id%" );
					 node.parentElement.insertBefore( getElement( "%Sibling%"), node );
					]]>     </Before>
     <After><![CDATA[
						let node = getElement( "%Id%" );
						node.parentElement.insertBefore( getElement( "%Sibling%"), node.nextSibling );
					]]>     </After>
    </Insert>
    <Attribute>
     <Getter><![CDATA[
							getElement( "%Id%" ).getAttribute("%Name%");
						]]>     </Getter>
     <Remover><![CDATA[
							getElement( "%Id%" ).removeAttribute( "%Name%" );
						]]>     </Remover>
     <Setter><![CDATA[
							getElement( "%Id%" ).setAttribute("%Name%", "%Value%");
						]]>     </Setter>
    </Attribute>
    <Value>
     <Getter><![CDATA[
							var result = getValue( "%Id%" );
//							console.log( "XDH: ", result );
							result;
						]]>     </Getter>
     <Setter><![CDATA[
							setValue( "%Id%", "%Value%" );
						]]>     </Setter>
    </Value>
    <Dialog>
     <Alert><![CDATA[
						dia = document.createElement( "span" );
						dia.innerHTML = transformToHTML( "%XML%", "%XSL%" );
						jQuery(dia).dialog({modal: true},{title: "%Title%"},{width: "auto"} ,{closeText: "%CloseText%"});
					]]>     </Alert>
     <Confirm><![CDATA[
							confirm( transformToText( "%XML%", "%XSL%" ).trim() );
					]]>     </Confirm>
    </Dialog>
    <DraggableSetter><![CDATA[
				var element = getElement( "%Id%" );
//				element.setAttribute( "draggable", "true" );
				if ( false )
					interact( element ).draggable(
						{
						}
					)
					.on( 'dragstart', function( event ) { log( 'dragstart' ); event.stopImmediatePropagation(); launchEvent( event.target, "dragstart" ); } )
					.on( 'dragend', function( event ) { log( 'dragend' ); launchEvent( event.target, "dragend" ); } )
					.on( 'click', function( event ) { log( '-->click' );event.stopImmediatePropagation();event.stopPropagation(); } )
					;
				]]>    </DraggableSetter>
    <DroppableSetter><![CDATA[
				var element = getElement( "%Id%" );
//				element.setAttribute( "ondragover", "event.preventDefault();" );
				if ( false )
					interact( element ).dropzone(
						{
						}
					)
					.on( 'drop', function( event ) { log( 'drop : ' + event.target.id + " ; " + event.relatedTarget.id ); launchEvent( event.target, "drop" );} );
				]]>    </DroppableSetter>
    <Fetcher/>
    <Setter>
     <Head><![CDATA[
					{
						let xml = "%XML%";
						let xsl = "%XSL%";
						setLayout(document.head, xml, xsl);
					}
					]]>     </Head>
     <Layout><![CDATA[
					{
						let xml = "%XML%";
						let xsl = "%XSL%";
						let id = "%Id%";
						setLayout(id, xml, xsl);
            
						if ( id == "" ) {
							let node = document.createElement("span");
							node.style.all="revert";
							node.innerHTML=`
								<div style="display:table; margin: auto;">
								 <div style="display: table; margin: 15px auto auto auto; border: 1px solid; padding: 10px;box-shadow: 5px 5px;">
								  <span style="text-shadow: 1px 1px;">Powered by the <span style="font-style: italic;">Atlas</span> toolkit (<a href="http://atlastk.org/">http://atlastk.org/</a>)</span>
								 </div>
								<span style="display: table; margin: 10px auto 5px auto;font-style: oblique;">QR code for this app:</span>
								<div style="display: flex; justify-content: space-around;">
 								 <a href="#">
 								  <div id="qrcode"></div>
								 </a>
							    </div>
							    <span style="display: table; margin: auto;font-style: oblique;margin: 5px auto auto auto;">Generated with <a href="https://davidshimjs.github.io/qrcodejs/">qrcode.js</a></span>
							   </div>`;
//							getElement( id ).insertBefore( node, getElement( id ).firstChild );
							getElement( id ).appendChild( node );
							new QRCode("qrcode", {width:125, height:125, correctLevel: QRCode.CorrectLevel.L}).makeCode(window.location.href);
						}

						var digests = fetchEventHandlers( id );
						digests;
						}
					]]>     </Layout>
     <EventHandlers><![CDATA[
					setEventHandlers( %Ids_%, %Events_% );
				]]>     </EventHandlers>
     <Contents><![CDATA[
					setContents( %Ids_%, %Contents_% );
				]]>     </Contents>
     <Timeout><![CDATA[
					setTimeout( (digest) => launchEvent(digest), %Delay%, "|TIMEOUT|timeout||((%Action%))" );
				]]>     </Timeout>
    </Setter>
    <WidgetsInstantiator><![CDATA[
					instantiateWidgets( %Ids_%, %Types_%, %ParametersSets_% );
				]]>    </WidgetsInstantiator>
    <Focuser><![CDATA[
						getElement( "%Id%" ).focus();
					]]>    </Focuser>
    <Selector><![CDATA[
						getElement( "%Id%" ).select();
					]]>    </Selector>
    <Log><![CDATA[
						log( "%Message%" );
					]]>    </Log>
    <Property>
     <Getter><![CDATA[
							getElement( "%Id%" ).%Name_%;
						]]>     </Getter>
     <Setter><![CDATA[
							getElement( "%Id%" ).%Name_% = %Value_%;
						]]>     </Setter>
    </Property>
    <Widget>
     <ValueRetriever><![CDATA[
							jQuery( getElement( "%Id%") ).%Method_%
						]]>     </ValueRetriever>
     <Focuser><![CDATA[
							jQuery( getElement( "%Id%") ).%Method_%
						]]>     </Focuser>
     <Selector><![CDATA[
							jQuery( getElement( "%Id%") ).%Method_%
						]]>     </Selector>
     <Fetcher><![CDATA[
					var digest = fetchWidgets( "%Id%" );
					digest;
				]]>     </Fetcher>
    </Widget>
    <CSSRule>
     <Insert><![CDATA[
							insertCSSRule( "%Rule%", %Index% );
						]]>     </Insert>
     <Append><![CDATA[
							insertCSSRule( "%Rule%", -1 ).toString();
						]]>     </Append>
     <Remove><![CDATA[
							removeCSSRule( %Index% );
						]]>     </Remove>
    </CSSRule>
    <Classes>
     <Add><![CDATA[
							addClasses( %Ids_%, %Classes_% );
						]]>     </Add>
     <Remove><![CDATA[
							removeClasses( %Ids_%, %Classes_% );
						]]>     </Remove>
     <Toggle><![CDATA[
							toggleClasses( %Ids_% , %Classes_% );
						]]>     </Toggle>
    </Classes>
    <Elements>
     <Enable><![CDATA[
							enableElements( %Ids_% );
						]]>     </Enable>
     <Disable><![CDATA[
							disableElements( %Ids_% );
						]]>     </Disable>
    </Elements>
   </Scripts>
  </Definitions>
  <Parameters>
   <Language>fr</Language>
   <Command>Process</Command>
   <Service>53741</Service>
  </Parameters>
  <Definitions/>
  <Locale>
   <Translations message="VersionCommandDescription">
    <Translation language="fr">Affiche la version du programme.</Translation>
    <Translation language="en">Displays the version of the program.</Translation>
   </Translations>
   <Translations message="LicenseCommandDescription">
    <Translation language="fr">Affiche la licence du programme.</Translation>
    <Translation language="en">Displays the program license.</Translation>
   </Translations>
   <Translations message="UsageCommandDescription">
    <Translation language="fr">Affiche cette page.</Translation>
    <Translation language="en">Displays this page.</Translation>
   </Translations>
   <Translations text="ProcessCommandDescription">
    <Translation language="fr">Lancement de la CGI.</Translation>
    <Translation language="en">CGI launching.</Translation>
   </Translations>
   <Translations text="ModuleFilenameArgumentDescription">
    <Translation language="fr">Nom et chemin de la bibliothèque dynamique correspondant au module XDHTML.</Translation>
    <Translation language="en"> Name and path of the dynamic library corresponding to the XDHTML module.</Translation>
   </Translations>
   <Translations text="ModuleFilenameArgumentLabel">
    <Translation language="fr">module</Translation>
    <Translation language="en">module</Translation>
   </Translations>
   <Translations text="ServiceArgumentDescription">
    <Translation language="fr">Port en écoute ('53741' si absent).</Translation>
    <Translation language="en">Port to listen to ('53741' if missing).</Translation>
   </Translations>
   <Translations text="ServiceArgumentLabel">
    <Translation language="fr">service</Translation>
    <Translation language="en">service</Translation>
   </Translations>
  </Locale>
  <Arguments>
   <Argument id="Usage" Description="UsageCommandDescription" long="help" Value="Usage"/>
   <Argument id="Version" Description="VersionCommandDescription" long="version" Value="Version"/>
   <Argument id="License" Description="LicenseCommandDescription" long="license" Value="License"/>
   <Argument id="ProcessCommand" Description="ProcessCommandDescription" long="process" Value="Process" Usage=" %ModuleFilenameArgument% [%ServiceArgument%]"/>
   <Argument id="ModuleFilenameArgument" Description="ModuleFilenameArgumentDescription" Path="ModuleFilename" Label="ModuleFilenameArgumentLabel"/>
   <Argument id="ServiceArgument" Description="ServiceArgumentDescription" Path="Service" Label="ServiceArgumentLabel"/>
   <Layouts>
    <Layout command="Process">
     <Link index="0" Target="ModuleFilenameArgument"/>
     <Link index="1" Target="ServiceArgument"/>
    </Layout>
   </Layouts>
  </Arguments>
 </Configuration>
</Configurations>
