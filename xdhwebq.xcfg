<?xml version="1.0" encoding="UTF-8"?>
<Configurations xmlns:xpp="http://q37.info/ns/xpp/">
 <Configuration target="xdhwebq">
  <Parameters>
   <Language>en</Language>
   <Command>Process</Command>
   <Service>53710</Service>
  </Parameters>
  <Definitions>
   <ErrorHead><![CDATA[
<title>Error: no application!</title>]]>   </ErrorHead>
   <OldErrorScript><![CDATA[
document.body.innerHTML = `
<div style="display: table; margin: auto; padding: 10px; text-align: center;">
    <span style="color: red; font-size: larger;">Unknown token, or corresponding application is no more running!</span>
    <p/>
    <span>See <a href="http://atlastk.org/faq">http://atlastk.org/faq.</a></span>
</div>
` + document.body.innerHTML;
reportClosing = false;
                ]]>   </OldErrorScript>
   <ErrorScript><![CDATA[
exitValue = exit.values.TOKEN;
                ]]>   </ErrorScript>
   <Scripts Version="0">
    <Script name="@SetEventHandlers_1" Arguments="#Ids,#Events"><![CDATA[
{
  setEventHandlers( %#Ids%, %#Events% );
}
        ]]>    </Script>
    <Script name="@InstantiateWidgets_1" Arguments="#Ids,#Types,#ParametersSets,#ContentRetrievingMethods,#FocusingMethods,#SelectionMethods"><![CDATA[
{
  instantiateWidgets( %#Ids%, %#Types%, %#ParametersSets%, %#ContentRetrievingMethods%, %#FocusingMethods%, %#SelectionMethods% );
}
        ]]>    </Script>
    <Script name="@BroadcastAction_1" Arguments="Action,Id"><![CDATA[
{
 launchEvent('%Id%|BROADCAST|broadcast||((broadcast|%Action%))');
}
		        ]]>    </Script>
    <Script name="@Quit_1" Arguments="">%%Quit</Script>
    <Script name="RawSend_1" Arguments="#Data"><![CDATA[%#Data%]]>    </Script>
    <Script name="Execute_1" Arguments="#Script"><![CDATA[
{
  %#Script%
}
        ]]>    </Script>
    <Script name="Alert_1" Arguments="Message"><![CDATA[
{
  alert("%Message%");
  ""; // Must return a value, or one will not wait the dismissing of the dialog box.  
}
        ]]>    </Script>
    <Script name="Confirm_1" Arguments="Message"><![CDATA[
{
  if ( window.confirm("%Message%") )
    "true";
  else
    "false";
}
        ]]>    </Script>
    <Script name="HandleLayout_1" Arguments="Variant,Id,XML,XSL"><![CDATA[
{
  let xml = "%XML%";	// 'XML' is HTML if 'XSL' is empty.
  let xsl = "%XSL%";
  let id = "%Id%";
  
  log("xml: " + xml);
  
  switch ( "%Variant%" ) {
  case 'Prepend':	// Deprecated
    prependLayout(id, xml, xsl);
    break;
  case 'Set':	// Deprecated
    setLayout(id, xml, xsl);
    break;
  case 'Append':	// Deprecated
    appendLayout(id, xml, xsl);
    break;
  default:
	if ( "%Variant%" === 'inner' )
		getElement(id).innerHTML = getLayoutHTML(xml, xsl);
	else
		getElement(id).insertAdjacentHTML("%Variant%", getLayoutHTML(xml, xsl));
  }

  var digests = fetchEventHandlersAndWidgets(getElement(id).parentElement);
  digests;  // Not returned to user. Splitted and given after processing to 'SetEnventHandlers_1' and  InstantiateWidgets_1' above internal scripts.
}
        ]]>    </Script>
    <Script name="GetContents_1" Arguments="#Ids"><![CDATA[
{
  getContents(%#Ids%);
}
        ]]>    </Script>
    <Script name="SetContents_1" Arguments="#Ids,#Contents"><![CDATA[
{
  setContents( %#Ids%, %#Contents% );
}
        ]]>    </Script>
    <Script name="GetValues_1" Arguments="#Ids"><![CDATA[
{
  getValues(%#Ids%);
}
        ]]>    </Script>
    <Script name="SetValues_1" Arguments="#Ids,#Values"><![CDATA[
{
  setValues( %#Ids%, %#Values% );
}
        ]]>    </Script>
    <Script name="GetMarks_1" Arguments="#Ids"><![CDATA[
{
  getMarks(%#Ids%);
}
        ]]>    </Script>
    <Script name="SetMarks_1" Arguments="#Ids,#Marks"><![CDATA[
{
  setMarks( %#Ids%, %#Marks% );
}
        ]]>    </Script>
    <Script name="HandleClasses_1" Arguments="Variant,#Ids,#Classes"><![CDATA[
{
  switch ( "%Variant%" ) {
  case 'Add':
    addClasses(%#Ids%, %#Classes%);
    break;
  case 'Remove':
    removeClasses(%#Ids%, %#Classes%);
    break;
  case 'Toggle':
    toggleClasses(%#Ids%, %#Classes%);
    break;
  }
}
        ]]>    </Script>
    <Script name="EnableElements_1" Arguments="#Ids"><![CDATA[
{
  enableElements( %#Ids% );
}
        ]]>    </Script>
    <Script name="DisableElements_1" Arguments="#Ids"><![CDATA[
{
  disableElements( %#Ids% );
}
        ]]>    </Script>
    <Script name="SetAttribute_1" Arguments="Id,Name,Value"><![CDATA[
{
  getElement( "%Id%" ).setAttribute("%Name%", "%Value%");
}
        ]]>    </Script>
    <Script name="GetAttribute_1" Arguments="Id,Name"><![CDATA[
{
  getElement( "%Id%" ).getAttribute("%Name%");
}
        ]]>    </Script>
    <Script name="RemoveAttribute_1" Arguments="Id,Name"><![CDATA[
{
  getElement( "%Id%" ).removeAttribute( "%Name%" );
}
        ]]>    </Script>
    <Script name="SetProperty_1" Arguments="Id,#Name,#Value"><![CDATA[
{
  getElement( "%Id%" ).%#Name% = %#Value%;
}
        ]]>    </Script>
    <Script name="GetProperty_1" Arguments="Id,#Name"><![CDATA[
{
  getElement( "%Id%" ).%#Name%;
}
        ]]>    </Script>
    <Script name="Focus_1" Arguments="Id"><![CDATA[
{
  getElement( "%Id%" ).focus();
}
        ]]>    </Script>
    <Script name="Parent_1" Arguments="Id"><![CDATA[
{
  getOrGenerateId( getElement( "%Id%" ).parentElement );
}
        ]]>    </Script>
    <Script name="FirstChild_1" Arguments="Id"><![CDATA[
{
  getOrGenerateId(getElement("%Id%").firstElementChild);
}
        ]]>    </Script>
    <Script name="LastChild_1" Arguments="Id"><![CDATA[
{
  getOrGenerateId(getElement("%Id%").lastElementChild);
}
        ]]>    </Script>
    <Script name="PreviousSibling_1" Arguments="Id"><![CDATA[
{
  getOrGenerateId(getElement("%Id%").previousElementSibling);
}
        ]]>    </Script>
    <Script name="NextSibling_1" Arguments="Id"><![CDATA[
{
  getOrGenerateId(getElement("%Id%").nextElementSibling);
}
        ]]>    </Script>
    <Script name="ScrollTo_1" Arguments="Id"><![CDATA[
{
  getElement("%Id%").scrollIntoView({behavior: 'smooth', block: 'center'});
}
        ]]>    </Script>
    <Script name="Flush_1" Arguments=""><![CDATA[
{
  ""; // To wait that all pending commands were executed.
}
        ]]>    </Script>
    <Script name="DebugLog_1" Arguments="Switch"><![CDATA[
{
		var debugLog = %Switch%;
}
        ]]>    </Script>
    <Script name="Log_1" Arguments="Message"><![CDATA[
{
		console.log("%Message%");
}
        ]]>    </Script>
    <Script name="" Arguments=""><![CDATA[
{

}
        ]]>    </Script>
   </Scripts>
   <TagsDefaultEvents>
    <Tag name="" Event="click"/>
    <Tag name="SELECT" Event="change"/>
    <Tag name="RANGE" Event="change"/>
    <Tag name="CHECKBOX" Event="change"/>
    <Tag name="RADIO" Event="change"/>
    <Tag name="DATE" Event="change"/>
    <Tag name="COLOR" Event="change"/>
    <Tag name="TEXT" Event="keypress" Key="Enter"/>
    <Tag name="PASSWORD" Event="keypress" Key="Enter"/>
    <Tag name="TEXTAREA" Event="keypress" Key="Enter"/>
   </TagsDefaultEvents>
  </Definitions>
  <Locale>
   <Translations message="VersionCommandDescription">
    <Translation language="fr">Affiche la version du programme.</Translation>
    <Translation language="en">Displays the version of the program.</Translation>
   </Translations>
   <Translations message="LicenseCommandDescription">
    <Translation language="fr">Affiche la licence du programme.</Translation>
    <Translation language="en">Displays the program license.</Translation>
   </Translations>
   <Translations message="UsageCommandDescription">
    <Translation language="fr">Affiche cette page.</Translation>
    <Translation language="en">Displays this page.</Translation>
   </Translations>
   <Translations text="ProcessCommandDescription">
    <Translation language="fr">Lancement de la CGI.</Translation>
    <Translation language="en">CGI launching.</Translation>
   </Translations>
   <Translations text="ModuleFilenameArgumentDescription">
    <Translation language="fr">Nom et chemin de la bibliothèque dynamique correspondant au module XDHTML.</Translation>
    <Translation language="en">Name and path of the dynamic library corresponding to the XDHTML module.</Translation>
   </Translations>
   <Translations text="ModuleFilenameArgumentLabel">
    <Translation language="fr">module</Translation>
    <Translation language="en">module</Translation>
   </Translations>
   <Translations text="ServiceArgumentDescription">
    <Translation language="fr">Port en écoute ('53710' si absent).</Translation>
    <Translation language="en">Port to listen to ('53710' if missing).</Translation>
   </Translations>
   <Translations text="ServiceArgumentLabel">
    <Translation language="fr">service</Translation>
    <Translation language="en">service</Translation>
   </Translations>
  </Locale>
  <Arguments>
   <Argument id="Usage" Description="UsageCommandDescription" long="help" Value="Usage"/>
   <Argument id="Version" Description="VersionCommandDescription" long="version" Value="Version"/>
   <Argument id="License" Description="LicenseCommandDescription" long="license" Value="License"/>
   <Argument id="ProcessCommand" Description="ProcessCommandDescription" long="process" Value="Process" Usage=" %ModuleFilenameArgument% [%ServiceArgument%]"/>
   <Argument id="ModuleFilenameArgument" Description="ModuleFilenameArgumentDescription" Path="ModuleFilename" Label="ModuleFilenameArgumentLabel"/>
   <Argument id="ServiceArgument" Description="ServiceArgumentDescription" Path="Service" Label="ServiceArgumentLabel"/>
   <Layouts>
    <Layout command="Process">
     <Link index="0" Target="ModuleFilenameArgument"/>
     <Link index="1" Target="ServiceArgument"/>
    </Layout>
   </Layouts>
  </Arguments>
 </Configuration>
</Configurations>
